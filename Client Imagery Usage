WITH client_filters AS (
	SELECT key,
		client AS name,
		project_type,
		application_type
	FROM production_etl.view_api_keys_latest
	WHERE key_type = 1
	    AND client = 'UPC'.  -- update client 
),

api_imagery AS (
	SELECT 'API Imagery' AS type,
		chips.response_created_at AS timestep,
		chips.client_name AS client_name,
		chips.api_key AS key,
		client_filters.project_type AS use_cases,
		client_filters.application_type AS application_type,
		'OK' AS error_code,
		chips.geom_id AS geom_id
	FROM production_etl.view_vinyasa_image_chips chips
		JOIN client_filters ON client_filters.key = chips.api_key
	WHERE date(chips.response_created_at) >= date('2022-01-01')  -- update contract start date 
        AND date(chips.response_created_at) <= date('2022-08-05') -- Update today's date or end of date range  
        ),
api_imagery_raw AS (
    SELECT *,
    row_number() OVER (ORDER BY client_name) AS global_row_num
    FROM api_imagery
),
api_imagery_first_seen AS (
	--Create uniqueness
	SELECT client_name,
		geom_id,
		use_cases,
		min(timestep) AS timestep
	FROM api_imagery_raw
	GROUP BY 1, 2, 3
),
api_imagery_first_seen_glob_row AS (
	--Create uniqueness
	SELECT a.client_name,
		a.geom_id,
		a.timestep,
		a.use_cases,
		min(b.global_row_num) AS global_row_num,
        1 AS first_seen
	FROM api_imagery_first_seen a
	LEFT JOIN api_imagery_raw b ON ( 
	    a.client_name = b.client_name
		AND a.geom_id = b.geom_id
		AND a.use_cases = b.use_cases
		AND a.timestep = b.timestep
    )
	GROUP BY 1, 2, 3, 4
),
api_imagery_complete_data AS (
	--Add first_seen to the original table
	SELECT raw.*,
		fs.first_seen
	FROM api_imagery_raw raw
		LEFT JOIN api_imagery_first_seen_glob_row fs ON raw.global_row_num = fs.global_row_num
),
api_imagery_final AS (
    SELECT type,
    		client_name,
    		key,
    		use_cases,
    		application_type,
    		error_code,
    		date_trunc('month', date(timestep)) AS date,
    		min(date(timestep)) AS first_seen_record,
    		max(date(timestep)) AS last_seen_record,
    		count(*) total_api_imagery,
    		count(first_seen = 1) AS unique_api_imagery
    	FROM api_imagery_complete_data
    	GROUP BY 1,
    		2,
    		3,
    		4,
    		5,
    		6,
    		7
)

select * from api_imagery_final
